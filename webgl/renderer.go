package webgl

import (
	"math/rand"
	"strings"
)

type RendererType int

const (
	_ RendererType = iota

	// Platform token types
	START_PLATFORM
	PLATFORM_LINUX
	PLATFORM_MACOS
	PLATFORM_WINDOWS
	END_PLATFORM

	// Platform version token types
	START_LINUX_PLATFORM_VERSION
	LINUX_PLATFORM_VERSION_5_18_11
	LINUX_PLATFORM_VERSION_5_19_15
	LINUX_PLATFORM_VERSION_6_7_11
	LINUX_PLATFORM_VERSION_6_8_12
	LINUX_PLATFORM_VERSION_6_9_10
	LINUX_PLATFORM_VERSION_6_10_11
	END_LINUX_PLATFORM_VERSION

	START_MACOS_PLATFORM_VERSION
	MACOS_PLATFORM_VERSION_13_6_6
	MACOS_PLATFORM_VERSION_13_7
	MACOS_PLATFORM_VERSION_14_4_1
	MACOS_PLATFORM_VERSION_14_6_1
	MACOS_PLATFORM_VERSION_14_7
	MACOS_PLATFORM_VERSION_15_0
	END_MACOS_PLATFORM_VERSION

	START_WINDOWS_PLATFORM_VERSION
	WINDOWS_PLATFORM_VERSION_10_0_0
	WINDOWS_PLATFORM_VERSION_14_0_0
	END_WINDOWS_PLATFORM_VERSION

	// Graphics layer abstraction types
	START_GRAPHICS_LAYER
	GRAPHICS_LAYER_ANGLE
	END_GRAPHICS_LAYER

	// Rendered abstraction types
	START_RENDERER_ABSTRACTION
	RENDERER_ABSTRACTION_ANGLE_METAL
	END_RENDERER_ABSTRACTION

	// Graphics provider types
	START_GRAPHICS_PROVIDER
	GRAPHICS_AMD
	GRAPHICS_ATI
	GRAPHICS_APPLE
	GRAPHICS_INTEL
	GRAPHICS_INTEL_INC
	GRAPHICS_INTEL_OPEN_SOURCE
	GRAPHICS_MESA
	GRAPHICS_MESA_XORG
	GRAPHICS_NVIDIA
	END_GRAPHICS_PROVIDER

	// Graphics drivers
	START_GRAPHICS_DRIVER
	MESA_DRI
	MESA
	END_GRAPHICS_DRIVER

	// Graphics chipset
	START_GRAPHICS_CHIPSET
	CHIPSET_AMD_RADEON_780M_GRAPHICS
	CHIPSET_AMD_RADEON_HD_5700_SERIES_0X000068B8
	CHIPSET_AMD_RADEON_HD_7660D_0X00009901
	CHIPSET_AMD_RADEON_R5_340_0X00006611
	CHIPSET_AMD_RADEON_R7_200_SERIES_0X00006658
	CHIPSET_AMD_RADEON_R7_370_SERIES_0X00006811
	CHIPSET_AMD_RADEON_RX_5700_0X0000731F
	CHIPSET_AMD_RADEON_RX_5700_XT_0X0000731F
	CHIPSET_AMD_RADEON_RX_580_2048SP_0X00006FDF
	CHIPSET_AMD_RADEON_RX_6500_XT
	CHIPSET_AMD_RADEON_RX_6600_0X000073FF
	CHIPSET_AMD_RADEON_RX_6600_XT_0X000073FF
	CHIPSET_AMD_RADEON_RX_6650_XT
	CHIPSET_AMD_RADEON_RX_6700_XT_0X000073DF
	CHIPSET_AMD_RADEON_RX_6750_XT_0X000073DF
	CHIPSET_AMD_RADEON_RX_6800_0X000073BF
	CHIPSET_AMD_RADEON_RX_7700_XT_0X0000747E
	CHIPSET_AMD_RADEON_RX_7900_XT_0X0000744C
	CHIPSET_AMD_RADEON_RX590_GME_0X00006FDF
	CHIPSET_AMD_RADEON_VEGA_3_GRAPHICS
	CHIPSET_AMD_RADEON_TM_GRAPHICS_0X00001506
	CHIPSET_AMD_RADEON_TM_GRAPHICS_0X00001636
	CHIPSET_AMD_RADEON_TM_GRAPHICS_0X00001638
	CHIPSET_AMD_RADEON_TM_GRAPHICS_0X0000164C
	CHIPSET_AMD_RADEON_TM_GRAPHICS_0X0000164E
	CHIPSET_AMD_RADEON_TM_GRAPHICS_0X00001681
	CHIPSET_AMD_RADEON_TM_GRAPHICS
	CHIPSET_AMD_RADEON_TM_R4_GRAPHICS_0X0000131B
	CHIPSET_AMD_RADEON_TM_RX_GRAPHICS_0X000067EF
	CHIPSET_AMD_RADEON_TM_RX_560_SERIES
	CHIPSET_AMD_RADEON_TM_VEGA_3_GRAPHICS_0X000015D8
	CHIPSET_AMD_RADEON_TM_RX_470_GRAPHICS_0X000067DF
	CHIPSET_RADEON_HD_3200_GRAPHICS
	CHIPSET_RADEON_HD_5850
	CHIPSET_RADEON_INSTINCT_MI25_MXGPU_0X0000686C
	CHIPSET_AMD_RADEON_PRO_5300M
	CHIPSET_AMD_RADEON_PRO_5500_XT
	CHIPSET_AMD_RADEON_PRO_5500M
	CHIPSET_AMD_RADEON_PRO_555X
	CHIPSET_AMD_RADEON_PRO_560
	CHIPSET_AMD_RADEON_PRO_560X
	CHIPSET_AMD_RADEON_PRO_575
	CHIPSET_AMD_RADEON_PRO_VEGA_20
	CHIPSET_AMD_RADEON_R9_M370X
	CHIPSET_AMD_RADEON_RX_VEGA_64
	CHIPSET_AMD_RADEON_R9_200_SERIES
	CHIPSET_AMD_RADEON_RX_550_550_SERIES
	CHIPSET_AMD_RADEON_RX_460
	CHIPSET_AMD_RADEON_RX_570_SERIES_0X000067DF
	CHIPSET_AMD_RADEON_RX_590_SERIES_0X000067DF
	CHIPSET_AMD_RADEON_TM_GRAPHICS_0X000015E7
	CHIPSET_AMD_RADEON_TM_GRAPHICS_0X000015BF

	CHIPSET_APPLE_M1_MAX
	CHIPSET_APPLE_M1_PRO
	CHIPSET_APPLE_M1
	CHIPSET_APPLE_M2_MAX
	CHIPSET_APPLE_M2_PRO
	CHIPSET_APPLE_M2
	CHIPSET_APPLE_M3_MAX
	CHIPSET_APPLE_M3_PRO
	CHIPSET_APPLE_M3

	CHIPSET_INTEL_HD_GRAPHICS_3000
	CHIPSET_INTEL_HD_GRAPHICS_4000_0X00000166
	CHIPSET_INTEL_HD_GRAPHICS_515
	CHIPSET_INTEL_HD_GRAPHICS_530_0X00001912
	CHIPSET_INTEL_HD_GRAPHICS_530_0X0000191B
	CHIPSET_INTEL_HD_GRAPHICS_620_0X00005916
	CHIPSET_INTEL_HD_GRAPHICS_630_0X00005912
	CHIPSET_INTEL_HD_GRAPHICS_630_0X0000591B
	CHIPSET_INTEL_IRIS_GRAPHICS_6100
	CHIPSET_INTEL_IRIS_PLUS_GRAPHICS_640
	CHIPSET_INTEL_IRIS_PLUS_GRAPHICS_645
	CHIPSET_INTEL_IRIS_PLUS_GRAPHICS_655
	CHIPSET_INTEL_UHD_GRAPHICS_617
	CHIPSET_INTEL_UHD_GRAPHICS_630_0X00003E92
	CHIPSET_INTEL_UHD_GRAPHICS_630_0X00003E98
	CHIPSET_INTEL_UHD_GRAPHICS_630_0X00003E9B
	CHIPSET_INTEL_UHD_GRAPHICS_630_0X00009BC5
	CHIPSET_INTEL_UHD_GRAPHICS_630_0X00009BC8
	CHIPSET_INTEL_IRIS_XE_GRAPHICS
	CHIPSET_INTEL_HD_GRAPHICS_400
	CHIPSET_INTEL_HD_GRAPHICS_4600_0X00000412
	CHIPSET_INTEL_HD_GRAPHICS_4600_0X00000416
	CHIPSET_INTEL_HD_GRAPHICS_500
	CHIPSET_INTEL_HD_GRAPHICS_510
	CHIPSET_INTEL_HD_GRAPHICS_520_0X00001916
	CHIPSET_INTEL_HD_GRAPHICS_5500_0X00001616
	CHIPSET_INTEL_UHD_GRAPHICS_0X00004626
	CHIPSET_INTEL_UHD_GRAPHICS_0X00004628
	CHIPSET_INTEL_UHD_GRAPHICS_0X00004688
	CHIPSET_INTEL_UHD_GRAPHICS_0X000046A3
	CHIPSET_INTEL_UHD_GRAPHICS_0X00008A56
	CHIPSET_INTEL_UHD_GRAPHICS_0X00009A60
	CHIPSET_INTEL_UHD_GRAPHICS_0X00009A70
	CHIPSET_INTEL_UHD_GRAPHICS_0X00009A78
	CHIPSET_INTEL_UHD_GRAPHICS_0X00009B41
	CHIPSET_INTEL_UHD_GRAPHICS_0X00009BC4
	CHIPSET_INTEL_UHD_GRAPHICS_0X0000A721
	CHIPSET_INTEL_UHD_GRAPHICS_0X0000A788
	CHIPSET_INTEL_UHD_GRAPHICS_0X0000A7A8
	CHIPSET_INTEL_UHD_GRAPHICS_0X0000A7A9
	CHIPSET_INTEL_UHD_GRAPHICS_600
	CHIPSET_INTEL_UHD_GRAPHICS_615_0X0000591C
	CHIPSET_INTEL_UHD_GRAPHICS_620_0X00003EA0
	CHIPSET_INTEL_UHD_GRAPHICS_620_0X00005917
	CHIPSET_INTEL_UHD_GRAPHICS_730_0X00004C8B
	CHIPSET_INTEL_UHD_GRAPHICS_770_0X00004680
	CHIPSET_INTEL_UHD_GRAPHICS_770_0X00004690
	CHIPSET_INTEL_UHD_GRAPHICS_770_0X0000A780
	CHIPSET_INTEL_Q45_Q43_EXPRESS_CHIPSET
	CHIPSET_INTEL_IRIS_PLUS_GRAPHICS_0X00008A52
	CHIPSET_INTEL_IRIS_XE_GRAPHICS_0X000046A6
	CHIPSET_INTEL_IRIS_XE_GRAPHICS_0X000046A8
	CHIPSET_INTEL_IRIS_XE_GRAPHICS_0X000046AA
	CHIPSET_INTEL_IRIS_XE_GRAPHICS_0X00009A40
	CHIPSET_INTEL_IRIS_XE_GRAPHICS_0X00009A49
	CHIPSET_INTEL_IRIS_XE_GRAPHICS_0X0000A7A0
	CHIPSET_INTEL_IRIS_XE_GRAPHICS_0X0000A7A1

	CHIPSET_NVIDIA_GEFORCE_GTX_1050_0X00001C81
	CHIPSET_NVIDIA_GEFORCE_GTX_1050_0X00001C8D
	CHIPSET_NVIDIA_GEFORCE_GTX_1060_3GB_0X00001C02
	CHIPSET_NVIDIA_GEFORCE_GTX_1060_6GB_0X00001C03
	CHIPSET_NVIDIA_GEFORCE_GTX_1070_0X00001B81
	CHIPSET_NVIDIA_GEFORCE_GTX_1070_0X00001BA1
	CHIPSET_NVIDIA_GEFORCE_GTX_1080_0X00001B80
	CHIPSET_NVIDIA_GEFORCE_RTX_2060_0X00001E89
	CHIPSET_NVIDIA_GEFORCE_RTX_2060_0X00001F08
	CHIPSET_NVIDIA_GEFORCE_RTX_2060_0X00001F15
	CHIPSET_NVIDIA_GEFORCE_RTX_2070_0X00001F02
	CHIPSET_NVIDIA_GEFORCE_RTX_2080_0X00001E90
	CHIPSET_NVIDIA_GEFORCE_RTX_3050_0X00002507
	CHIPSET_NVIDIA_GEFORCE_RTX_3050_0X00002582
	CHIPSET_NVIDIA_GEFORCE_RTX_3060_0X00002487
	CHIPSET_NVIDIA_GEFORCE_RTX_3060_0X00002503
	CHIPSET_NVIDIA_GEFORCE_RTX_3060_0X00002504
	CHIPSET_NVIDIA_GEFORCE_RTX_3070_0X00002484
	CHIPSET_NVIDIA_GEFORCE_RTX_3070_0X00002488
	CHIPSET_NVIDIA_GEFORCE_RTX_3080_0X00002206
	CHIPSET_NVIDIA_GEFORCE_RTX_3080_0X00002216
	CHIPSET_NVIDIA_GEFORCE_RTX_3090_0X00002204
	CHIPSET_NVIDIA_GEFORCE_RTX_4050_LAPTOP_GPU_0X000028A1
	CHIPSET_NVIDIA_GEFORCE_RTX_4060_0X00002882
	CHIPSET_NVIDIA_GEFORCE_RTX_4070_0X00002786
	CHIPSET_NVIDIA_GEFORCE_RTX_4080_0X00002704
	CHIPSET_NVIDIA_GEFORCE_RTX_4090_0X00002684
	CHIPSET_NVIDIA_GEFORCE_210_0X00000A65
	CHIPSET_NVIDIA_GEFORCE_8400GS_0X00000404
	CHIPSET_NVIDIA_GEFORCE_8800_GTX
	CHIPSET_NVIDIA_GEFORCE_9600_GT_0X00000622
	CHIPSET_NVIDIA_GEFORCE_GT_730_0X00001287
	CHIPSET_NVIDIA_GEFORCE_GTX_1050_TI_0X00001C82
	CHIPSET_NVIDIA_GEFORCE_GTX_1050_TI_0X00001C8C
	CHIPSET_NVIDIA_GEFORCE_GTX_1080_TI_0X00001B06
	CHIPSET_NVIDIA_GEFORCE_GTX_1650_0X00001F82
	CHIPSET_NVIDIA_GEFORCE_GTX_1650_0X00001F91
	CHIPSET_NVIDIA_GEFORCE_GTX_1650_0X00002188
	CHIPSET_NVIDIA_GEFORCE_GTX_1660_0X00002184
	CHIPSET_NVIDIA_GEFORCE_GTX_1660_SUPER_0X000021C4
	CHIPSET_NVIDIA_GEFORCE_GTX_1660_TI_0X00002182
	CHIPSET_NVIDIA_GEFORCE_GTX_1660_TI_0X00002191
	CHIPSET_NVIDIA_GEFORCE_GTX_480
	CHIPSET_NVIDIA_GEFORCE_GTX_580
	CHIPSET_NVIDIA_GEFORCE_GTX_660_0X000011C0
	CHIPSET_NVIDIA_GEFORCE_GTX_750_TI_0X00001380
	CHIPSET_NVIDIA_GEFORCE_GTX_980_0X000013C0
	CHIPSET_NVIDIA_GEFORCE_GTX_980_TI_0X000017C8
	CHIPSET_NVIDIA_GEFORCE_RTX_2060_SUPER_0X00001F06
	CHIPSET_NVIDIA_GEFORCE_RTX_2070_SUPER_0X00001E84
	CHIPSET_NVIDIA_GEFORCE_RTX_2080_SUPER_0X00001E81
	CHIPSET_NVIDIA_GEFORCE_RTX_3050_TI_LAPTOP_GPU_0X000025A0
	CHIPSET_NVIDIA_GEFORCE_RTX_3060_TI_0X00002486
	CHIPSET_NVIDIA_GEFORCE_RTX_3060_TI_0X00002489
	CHIPSET_NVIDIA_GEFORCE_RTX_3060_TI_0X000024C9
	CHIPSET_NVIDIA_GEFORCE_RTX_3070
	CHIPSET_NVIDIA_GEFORCE_RTX_3070_TI_0X00002482
	CHIPSET_NVIDIA_GEFORCE_RTX_3070_TI_LAPTOP_GPU_0X000024A0
	CHIPSET_NVIDIA_GEFORCE_RTX_3080_LAPTOP_GPU_0X0000249C
	CHIPSET_NVIDIA_GEFORCE_RTX_3080_LAPTOP_GPU_0X000024DC
	CHIPSET_NVIDIA_GEFORCE_RTX_3080_TI_0X00002208
	CHIPSET_NVIDIA_GEFORCE_RTX_3080_TI_LAPTOP_GPU_0X00002420
	CHIPSET_NVIDIA_GEFORCE_RTX_3090_TI_0X00002203
	CHIPSET_NVIDIA_GEFORCE_RTX_4060_LAPTOP_GPU_0X000028A0
	CHIPSET_NVIDIA_GEFORCE_RTX_4060_LAPTOP_GPU_0X000028E0
	CHIPSET_NVIDIA_GEFORCE_RTX_4060_TI_0X00002803
	CHIPSET_NVIDIA_GEFORCE_RTX_4070_SUPER_0X00002783
	CHIPSET_NVIDIA_GEFORCE_RTX_4070_TI_0X00002782
	CHIPSET_NVIDIA_GEFORCE_RTX_4080_SUPER_0X00002702

	END_GRAPHICS_CHIPSET
)

func (r RendererType) String() string {
	switch r {
	case GRAPHICS_LAYER_ANGLE:
		return "ANGLE"

	case RENDERER_ABSTRACTION_ANGLE_METAL:
		return "ANGLE Metal Renderer:"

	case GRAPHICS_AMD:
		return "(AMD,"
	case GRAPHICS_ATI:
		return "(ATI Technologies Inc.,"

	case GRAPHICS_APPLE:
		return "(Apple,"

	case GRAPHICS_INTEL:
		return "(Intel,"
	case GRAPHICS_INTEL_INC:
		return "(Intel Inc.,"
	case GRAPHICS_INTEL_OPEN_SOURCE:
		return "(Intel Open Source Technology Center,"

	case GRAPHICS_MESA:
		return "(Mesa,"
	case GRAPHICS_MESA_XORG:
		return "(Mesa/X.org,"

	case GRAPHICS_NVIDIA:
		return "(NVIDIA,"

	case MESA_DRI:
		return "Mesa DRI"
	case MESA:
		return "Mesa"

	case CHIPSET_AMD_RADEON_780M_GRAPHICS:
		return "AMD Radeon 780M Graphics"
	case CHIPSET_AMD_RADEON_HD_5700_SERIES_0X000068B8:
		return "AMD Radeon HD 5700 Series (0x000068B8)"
	case CHIPSET_AMD_RADEON_HD_7660D_0X00009901:
		return "AMD Radeon HD 7660D (0x00009901)"
	case CHIPSET_AMD_RADEON_R5_340_0X00006611:
		return "AMD Radeon R5 340 (0x00006611)"
	case CHIPSET_AMD_RADEON_R7_200_SERIES_0X00006658:
		return "AMD Radeon R7 200 Series (0x00006658)"
	case CHIPSET_AMD_RADEON_R7_370_SERIES_0X00006811:
		return "AMD Radeon R7 370 Series (0x00006811)"
	case CHIPSET_AMD_RADEON_RX_5700_0X0000731F:
		return "AMD Radeon RX 5700 (0x0000731F)"
	case CHIPSET_AMD_RADEON_RX_5700_XT_0X0000731F:
		return "AMD Radeon RX 5700 XT (0x0000731F)"
	case CHIPSET_AMD_RADEON_RX_580_2048SP_0X00006FDF:
		return "AMD Radeon RX 580 2048SP (0x00006FDF)"
	case CHIPSET_AMD_RADEON_RX_6500_XT:
		return "AMD Radeon RX 6500 XT"
	case CHIPSET_AMD_RADEON_RX_6600_0X000073FF:
		return "AMD Radeon RX 6600 (0x000073FF)"
	case CHIPSET_AMD_RADEON_RX_6600_XT_0X000073FF:
		return "AMD Radeon RX 6600 XT (0x000073FF)"
	case CHIPSET_AMD_RADEON_RX_6650_XT:
		return "AMD Radeon RX 6650 XT"
	case CHIPSET_AMD_RADEON_RX_6700_XT_0X000073DF:
		return "AMD Radeon RX 6700 XT (0x000073DF)"
	case CHIPSET_AMD_RADEON_RX_6750_XT_0X000073DF:
		return "AMD Radeon RX 6750 XT (0x000073DF)"
	case CHIPSET_AMD_RADEON_RX_6800_0X000073BF:
		return "AMD Radeon RX 6800 (0x000073BF)"
	case CHIPSET_AMD_RADEON_RX_7700_XT_0X0000747E:
		return "AMD Radeon RX 7700 XT (0x0000747E)"
	case CHIPSET_AMD_RADEON_RX_7900_XT_0X0000744C:
		return "AMD Radeon RX 7900 XT (0x0000744C)"
	case CHIPSET_AMD_RADEON_RX590_GME_0X00006FDF:
		return "AMD Radeon RX590 GME (0x00006FDF)"
	case CHIPSET_AMD_RADEON_VEGA_3_GRAPHICS:
		return "AMD Radeon Vega 3 Graphics"
	case CHIPSET_AMD_RADEON_TM_GRAPHICS_0X00001506:
		return "AMD Radeon(TM) Graphics (0x00001506)"
	case CHIPSET_AMD_RADEON_TM_GRAPHICS_0X00001636:
		return "AMD Radeon(TM) Graphics (0x00001636)"
	case CHIPSET_AMD_RADEON_TM_GRAPHICS_0X00001638:
		return "AMD Radeon(TM) Graphics (0x00001638)"
	case CHIPSET_AMD_RADEON_TM_GRAPHICS_0X0000164C:
		return "AMD Radeon(TM) Graphics (0x0000164C)"
	case CHIPSET_AMD_RADEON_TM_GRAPHICS_0X0000164E:
		return "AMD Radeon(TM) Graphics (0x0000164E)"
	case CHIPSET_AMD_RADEON_TM_GRAPHICS_0X00001681:
		return "AMD Radeon(TM) Graphics (0x00001681)"
	case CHIPSET_AMD_RADEON_TM_GRAPHICS:
		return "AMD Radeon(TM) Graphics"
	case CHIPSET_AMD_RADEON_TM_R4_GRAPHICS_0X0000131B:
		return "AMD Radeon(TM) R4 Graphics (0x0000131B)"
	case CHIPSET_AMD_RADEON_TM_RX_GRAPHICS_0X000067EF:
		return "AMD Radeon(TM) RX 560 Series (0x000067EF)"
	case CHIPSET_AMD_RADEON_TM_RX_560_SERIES:
		return "AMD Radeon(TM) RX 560 Series"
	case CHIPSET_AMD_RADEON_TM_VEGA_3_GRAPHICS_0X000015D8:
		return "AMD Radeon(TM) Vega 3 Graphics (0x000015D8)"
	case CHIPSET_AMD_RADEON_TM_RX_470_GRAPHICS_0X000067DF:
		return "Radeon (TM) RX 470 Graphics (0x000067DF)"
	case CHIPSET_RADEON_HD_3200_GRAPHICS:
		return "Radeon HD 3200 Graphics"
	case CHIPSET_RADEON_HD_5850:
		return "Radeon HD 5850"
	case CHIPSET_RADEON_INSTINCT_MI25_MXGPU_0X0000686C:
		return "Radeon Instinct MI25 MxGPU (0x0000686C)"
	case CHIPSET_AMD_RADEON_PRO_5300M:
		return "AMD Radeon Pro 5300M"
	case CHIPSET_AMD_RADEON_PRO_5500_XT:
		return "AMD Radeon Pro 5500 XT"
	case CHIPSET_AMD_RADEON_PRO_5500M:
		return "AMD Radeon Pro 5500M"
	case CHIPSET_AMD_RADEON_PRO_555X:
		return "AMD Radeon Pro 555X"
	case CHIPSET_AMD_RADEON_PRO_560:
		return "AMD Radeon Pro 560"
	case CHIPSET_AMD_RADEON_PRO_560X:
		return "AMD Radeon Pro 560X"
	case CHIPSET_AMD_RADEON_PRO_575:
		return "AMD Radeon Pro 575"
	case CHIPSET_AMD_RADEON_PRO_VEGA_20:
		return "AMD Radeon Pro Vega 20"
	case CHIPSET_AMD_RADEON_R9_M370X:
		return "AMD Radeon R9 M370X"
	case CHIPSET_AMD_RADEON_RX_VEGA_64:
		return "AMD Radeon RX Vega 64"
	case CHIPSET_AMD_RADEON_R9_200_SERIES:
		return "AMD Radeon R9 200 Series"
	case CHIPSET_AMD_RADEON_RX_550_550_SERIES:
		return "AMD Radeon RX550/550 Series"
	case CHIPSET_AMD_RADEON_RX_460:
		return "AMD Radeon(TM) RX 460 Graphics"
	case CHIPSET_AMD_RADEON_RX_570_SERIES_0X000067DF:
		return "AMD Radeon RX 570 Series (0x000067DF)"
	case CHIPSET_AMD_RADEON_RX_590_SERIES_0X000067DF:
		return "AMD Radeon RX 590 Series (0x000067DF)"
	case CHIPSET_AMD_RADEON_TM_GRAPHICS_0X000015E7:
		return "AMD Radeon(TM) Graphics (0x000015E7)"
	case CHIPSET_AMD_RADEON_TM_GRAPHICS_0X000015BF:
		return "AMD Radeon(TM) Graphics (0x000015BF)"

	case CHIPSET_APPLE_M1_MAX:
		return "Apple M1 Max"
	case CHIPSET_APPLE_M1_PRO:
		return "Apple M1 Pro"
	case CHIPSET_APPLE_M1:
		return "Apple M1"
	case CHIPSET_APPLE_M2_MAX:
		return "Apple M2 Max"
	case CHIPSET_APPLE_M2_PRO:
		return "Apple M2 Pro"
	case CHIPSET_APPLE_M2:
		return "Apple M2"
	case CHIPSET_APPLE_M3_MAX:
		return "Apple M3 Max"
	case CHIPSET_APPLE_M3_PRO:
		return "Apple M3 Pro"
	case CHIPSET_APPLE_M3:
		return "Apple M3"

	case CHIPSET_INTEL_HD_GRAPHICS_3000:
		return "Intel(R) HD Graphics 3000"
	case CHIPSET_INTEL_HD_GRAPHICS_4000_0X00000166:
		return "Intel(R) HD Graphics 4000 (0x00000166)"
	case CHIPSET_INTEL_HD_GRAPHICS_515:
		return "Intel(R) HD Graphics 515"
	case CHIPSET_INTEL_HD_GRAPHICS_530_0X00001912:
		return "Intel(R) HD Graphics 530 (0x00001912)"
	case CHIPSET_INTEL_HD_GRAPHICS_530_0X0000191B:
		return "Intel(R) HD Graphics 530 (0x0000191B)"
	case CHIPSET_INTEL_HD_GRAPHICS_620_0X00005916:
		return "Intel(R) HD Graphics 620 (0x00005916)"
	case CHIPSET_INTEL_HD_GRAPHICS_630_0X00005912:
		return "Intel(R) HD Graphics 630 (0x00005912)"
	case CHIPSET_INTEL_HD_GRAPHICS_630_0X0000591B:
		return "Intel(R) HD Graphics 630 (0x0000591B)"
	case CHIPSET_INTEL_IRIS_GRAPHICS_6100:
		return "Intel(R) Iris(TM) Graphics 6100"
	case CHIPSET_INTEL_IRIS_PLUS_GRAPHICS_640:
		return "Intel(R) Iris(TM) Plus Graphics 640"
	case CHIPSET_INTEL_IRIS_PLUS_GRAPHICS_645:
		return "Intel(R) Iris(TM) Plus Graphics 645"
	case CHIPSET_INTEL_IRIS_PLUS_GRAPHICS_655:
		return "Intel(R) Iris(TM) Plus Graphics 655"
	case CHIPSET_INTEL_UHD_GRAPHICS_617:
		return "Intel(R) UHD Graphics 617"
	case CHIPSET_INTEL_UHD_GRAPHICS_630_0X00003E92:
		return "Intel(R) UHD Graphics 630 (0x00003E92)"
	case CHIPSET_INTEL_UHD_GRAPHICS_630_0X00003E98:
		return "Intel(R) UHD Graphics 630 (0x00003E98)"
	case CHIPSET_INTEL_UHD_GRAPHICS_630_0X00003E9B:
		return "Intel(R) UHD Graphics 630 (0x00003E9B)"
	case CHIPSET_INTEL_UHD_GRAPHICS_630_0X00009BC5:
		return "Intel(R) UHD Graphics 630 (0x00009BC5)"
	case CHIPSET_INTEL_UHD_GRAPHICS_630_0X00009BC8:
		return "Intel(R) UHD Graphics 630 (0x00009BC8)"
	case CHIPSET_INTEL_IRIS_XE_GRAPHICS:
		return "Intel(R) Iris(R) Xe Graphics"
	case CHIPSET_INTEL_HD_GRAPHICS_400:
		return "Intel(R) HD Graphics 400"
	case CHIPSET_INTEL_HD_GRAPHICS_4600_0X00000412:
		return "Intel(R) HD Graphics 4600 (0x00000412)"
	case CHIPSET_INTEL_HD_GRAPHICS_4600_0X00000416:
		return "Intel(R) HD Graphics 4600 (0x00000416)"
	case CHIPSET_INTEL_HD_GRAPHICS_500:
		return "Intel(R) HD Graphics 500"
	case CHIPSET_INTEL_HD_GRAPHICS_510:
		return "Intel(R) HD Graphics 510"
	case CHIPSET_INTEL_HD_GRAPHICS_520_0X00001916:
		return "Intel(R) HD Graphics 520 (0x00001916)"
	case CHIPSET_INTEL_HD_GRAPHICS_5500_0X00001616:
		return "Intel(R) HD Graphics 5500 (0x00001616)"
	case CHIPSET_INTEL_UHD_GRAPHICS_0X00004626:
		return "Intel(R) UHD Graphics (0x00004626)"
	case CHIPSET_INTEL_UHD_GRAPHICS_0X00004628:
		return "Intel(R) UHD Graphics (0x00004628)"
	case CHIPSET_INTEL_UHD_GRAPHICS_0X00004688:
		return "Intel(R) UHD Graphics (0x00004688)"
	case CHIPSET_INTEL_UHD_GRAPHICS_0X000046A3:
		return "Intel(R) UHD Graphics (0x000046A3)"
	case CHIPSET_INTEL_UHD_GRAPHICS_0X00008A56:
		return "Intel(R) UHD Graphics (0x00008A56)"
	case CHIPSET_INTEL_UHD_GRAPHICS_0X00009A60:
		return "Intel(R) UHD Graphics (0x00009A60)"
	case CHIPSET_INTEL_UHD_GRAPHICS_0X00009A70:
		return "Intel(R) UHD Graphics (0x00009A70)"
	case CHIPSET_INTEL_UHD_GRAPHICS_0X00009A78:
		return "Intel(R) UHD Graphics (0x00009A78)"
	case CHIPSET_INTEL_UHD_GRAPHICS_0X00009B41:
		return "Intel(R) UHD Graphics (0x00009B41)"
	case CHIPSET_INTEL_UHD_GRAPHICS_0X00009BC4:
		return "Intel(R) UHD Graphics (0x00009BC4)"
	case CHIPSET_INTEL_UHD_GRAPHICS_0X0000A721:
		return "Intel(R) UHD Graphics (0x0000A721)"
	case CHIPSET_INTEL_UHD_GRAPHICS_0X0000A788:
		return "Intel(R) UHD Graphics (0x0000A788)"
	case CHIPSET_INTEL_UHD_GRAPHICS_0X0000A7A8:
		return "Intel(R) UHD Graphics (0x0000A7A8)"
	case CHIPSET_INTEL_UHD_GRAPHICS_0X0000A7A9:
		return "Intel(R) UHD Graphics (0x0000A7A9)"
	case CHIPSET_INTEL_UHD_GRAPHICS_600:
		return "Intel(R) UHD Graphics 600"
	case CHIPSET_INTEL_UHD_GRAPHICS_615_0X0000591C:
		return "Intel(R) UHD Graphics 615 (0x0000591C)"
	case CHIPSET_INTEL_UHD_GRAPHICS_620_0X00003EA0:
		return "Intel(R) UHD Graphics 620 (0x00003EA0)"
	case CHIPSET_INTEL_UHD_GRAPHICS_620_0X00005917:
		return "Intel(R) UHD Graphics 620 (0x00005917)"
	case CHIPSET_INTEL_UHD_GRAPHICS_730_0X00004C8B:
		return "Intel(R) UHD Graphics 730 (0x00004C8B)"
	case CHIPSET_INTEL_UHD_GRAPHICS_770_0X00004680:
		return "Intel(R) UHD Graphics 770 (0x00004680)"
	case CHIPSET_INTEL_UHD_GRAPHICS_770_0X00004690:
		return "Intel(R) UHD Graphics 770 (0x00004690)"
	case CHIPSET_INTEL_UHD_GRAPHICS_770_0X0000A780:
		return "Intel(R) UHD Graphics 770 (0x0000A780)"
	case CHIPSET_INTEL_Q45_Q43_EXPRESS_CHIPSET:
		return "Intel(R) Q45/Q43 Express Chipset"
	case CHIPSET_INTEL_IRIS_PLUS_GRAPHICS_0X00008A52:
		return "Intel(R) Iris(R) Plus Graphics (0x00008A52)"
	case CHIPSET_INTEL_IRIS_XE_GRAPHICS_0X000046A6:
		return "Intel(R) Iris(R) Xe Graphics (0x000046A6)"
	case CHIPSET_INTEL_IRIS_XE_GRAPHICS_0X000046A8:
		return "Intel(R) Iris(R) Xe Graphics (0x000046A8)"
	case CHIPSET_INTEL_IRIS_XE_GRAPHICS_0X000046AA:
		return "Intel(R) Iris(R) Xe Graphics (0x000046AA)"
	case CHIPSET_INTEL_IRIS_XE_GRAPHICS_0X00009A40:
		return "Intel(R) Iris(R) Xe Graphics (0x00009A40)"
	case CHIPSET_INTEL_IRIS_XE_GRAPHICS_0X00009A49:
		return "Intel(R) Iris(R) Xe Graphics (0x00009A49)"
	case CHIPSET_INTEL_IRIS_XE_GRAPHICS_0X0000A7A0:
		return "Intel(R) Iris(R) Xe Graphics (0x0000A7A0)"
	case CHIPSET_INTEL_IRIS_XE_GRAPHICS_0X0000A7A1:
		return "Intel(R) Iris(R) Xe Graphics (0x0000A7A1)"

	case CHIPSET_NVIDIA_GEFORCE_GTX_1050_0X00001C81:
		return "NVIDIA GeForce GTX 1050 (0x00001C81)"
	case CHIPSET_NVIDIA_GEFORCE_GTX_1050_0X00001C8D:
		return "NVIDIA GeForce GTX 1050 (0x00001C8D)"
	case CHIPSET_NVIDIA_GEFORCE_GTX_1060_3GB_0X00001C02:
		return "NVIDIA GeForce GTX 1060 3GB (0x00001C02)"
	case CHIPSET_NVIDIA_GEFORCE_GTX_1060_6GB_0X00001C03:
		return "NVIDIA GeForce GTX 1060 6GB (0x00001C03)"
	case CHIPSET_NVIDIA_GEFORCE_GTX_1070_0X00001B81:
		return "NVIDIA GeForce GTX 1070 (0x00001B81)"
	case CHIPSET_NVIDIA_GEFORCE_GTX_1070_0X00001BA1:
		return "NVIDIA GeForce GTX 1070 (0x00001BA1)"
	case CHIPSET_NVIDIA_GEFORCE_GTX_1080_0X00001B80:
		return "NVIDIA GeForce GTX 1080 (0x00001B80)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_2060_0X00001E89:
		return "NVIDIA GeForce RTX 2060 (0x00001E89)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_2060_0X00001F08:
		return "NVIDIA GeForce RTX 2060 (0x00001F08)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_2060_0X00001F15:
		return "NVIDIA GeForce RTX 2060 (0x00001F15)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_2070_0X00001F02:
		return "NVIDIA GeForce RTX 2070 (0x00001F02)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_2080_0X00001E90:
		return "NVIDIA GeForce RTX 2080 (0x00001E90)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_3050_0X00002507:
		return "NVIDIA GeForce RTX 3050 (0x00002507)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_3050_0X00002582:
		return "NVIDIA GeForce RTX 3050 (0x00002582)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_3060_0X00002487:
		return "NVIDIA GeForce RTX 3060 (0x00002487)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_3060_0X00002503:
		return "NVIDIA GeForce RTX 3060 (0x00002503)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_3060_0X00002504:
		return "NVIDIA GeForce RTX 3060 (0x00002504)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_3070_0X00002484:
		return "NVIDIA GeForce RTX 3070 (0x00002484)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_3070_0X00002488:
		return "NVIDIA GeForce RTX 3070 (0x00002488)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_3080_0X00002206:
		return "NVIDIA GeForce RTX 3080 (0x00002206)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_3080_0X00002216:
		return "NVIDIA GeForce RTX 3080 (0x00002216)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_3090_0X00002204:
		return "NVIDIA GeForce RTX 3090 (0x00002204)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_4050_LAPTOP_GPU_0X000028A1:
		return "NVIDIA GeForce RTX 4050 Laptop GPU (0x000028A1)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_4060_0X00002882:
		return "NVIDIA GeForce RTX 4060 (0x00002882)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_4070_0X00002786:
		return "NVIDIA GeForce RTX 4070 (0x00002786)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_4080_0X00002704:
		return "NVIDIA GeForce RTX 4080 (0x00002704)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_4090_0X00002684:
		return "NVIDIA GeForce RTX 4090 (0x00002684)"
	case CHIPSET_NVIDIA_GEFORCE_210_0X00000A65:
		return "NVIDIA GeForce 210 (0x00000A65)"
	case CHIPSET_NVIDIA_GEFORCE_8400GS_0X00000404:
		return "NVIDIA GeForce 8400GS (0x00000404)"
	case CHIPSET_NVIDIA_GEFORCE_8800_GTX:
		return "NVIDIA GeForce 8800 GTX"
	case CHIPSET_NVIDIA_GEFORCE_9600_GT_0X00000622:
		return "NVIDIA GeForce 9600 GT (0x00000622)"
	case CHIPSET_NVIDIA_GEFORCE_GT_730_0X00001287:
		return "NVIDIA GeForce GT 730 (0x00001287)"
	case CHIPSET_NVIDIA_GEFORCE_GTX_1050_TI_0X00001C82:
		return "NVIDIA GeForce GTX 1050 Ti (0x00001C82)"
	case CHIPSET_NVIDIA_GEFORCE_GTX_1050_TI_0X00001C8C:
		return "NVIDIA GeForce GTX 1050 Ti with Max-Q Design (0x00001C8C)"
	case CHIPSET_NVIDIA_GEFORCE_GTX_1080_TI_0X00001B06:
		return "NVIDIA GeForce GTX 1080 Ti (0x00001B06)"
	case CHIPSET_NVIDIA_GEFORCE_GTX_1650_0X00001F82:
		return "NVIDIA GeForce GTX 1650 (0x00001F82)"
	case CHIPSET_NVIDIA_GEFORCE_GTX_1650_0X00001F91:
		return "NVIDIA GeForce GTX 1650 (0x00001F91)"
	case CHIPSET_NVIDIA_GEFORCE_GTX_1650_0X00002188:
		return "NVIDIA GeForce GTX 1650 (0x00002188)"
	case CHIPSET_NVIDIA_GEFORCE_GTX_1660_0X00002184:
		return "NVIDIA GeForce GTX 1660 (0x00002184)"
	case CHIPSET_NVIDIA_GEFORCE_GTX_1660_SUPER_0X000021C4:
		return "NVIDIA GeForce GTX 1660 SUPER (0x000021C4)"
	case CHIPSET_NVIDIA_GEFORCE_GTX_1660_TI_0X00002182:
		return "NVIDIA GeForce GTX 1660 Ti (0x00002182)"
	case CHIPSET_NVIDIA_GEFORCE_GTX_1660_TI_0X00002191:
		return "NVIDIA GeForce GTX 1660 Ti (0x00002191)"
	case CHIPSET_NVIDIA_GEFORCE_GTX_480:
		return "NVIDIA GeForce GTX 480"
	case CHIPSET_NVIDIA_GEFORCE_GTX_580:
		return "NVIDIA GeForce GTX 580"
	case CHIPSET_NVIDIA_GEFORCE_GTX_660_0X000011C0:
		return "NVIDIA GeForce GTX 660 (0x000011C0)"
	case CHIPSET_NVIDIA_GEFORCE_GTX_750_TI_0X00001380:
		return "NVIDIA GeForce GTX 750 Ti (0x00001380)"
	case CHIPSET_NVIDIA_GEFORCE_GTX_980_0X000013C0:
		return "NVIDIA GeForce GTX 980 (0x000013C0)"
	case CHIPSET_NVIDIA_GEFORCE_GTX_980_TI_0X000017C8:
		return "NVIDIA GeForce GTX 980 Ti (0x000017C8)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_2060_SUPER_0X00001F06:
		return "NVIDIA GeForce RTX 2060 SUPER (0x00001F06)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_2070_SUPER_0X00001E84:
		return "NVIDIA GeForce RTX 2070 SUPER (0x00001E84)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_2080_SUPER_0X00001E81:
		return "NVIDIA GeForce RTX 2080 SUPER (0x00001E81)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_3050_TI_LAPTOP_GPU_0X000025A0:
		return "NVIDIA GeForce RTX 3050 Ti Laptop GPU (0x000025A0)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_3060_TI_0X00002486:
		return "NVIDIA GeForce RTX 3060 Ti (0x00002486)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_3060_TI_0X00002489:
		return "NVIDIA GeForce RTX 3060 Ti (0x00002489)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_3060_TI_0X000024C9:
		return "NVIDIA GeForce RTX 3060 Ti (0x000024C9)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_3070_TI_0X00002482:
		return "NVIDIA GeForce RTX 3070 Ti (0x00002482)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_3070_TI_LAPTOP_GPU_0X000024A0:
		return "NVIDIA GeForce RTX 3070 Ti Laptop GPU (0x000024A0)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_3080_LAPTOP_GPU_0X0000249C:
		return "NVIDIA GeForce RTX 3080 Laptop GPU (0x0000249C)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_3080_LAPTOP_GPU_0X000024DC:
		return "NVIDIA GeForce RTX 3080 Laptop GPU (0x000024DC)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_3080_TI_0X00002208:
		return "NVIDIA GeForce RTX 3080 Ti (0x00002208)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_3080_TI_LAPTOP_GPU_0X00002420:
		return "NVIDIA GeForce RTX 3080 Ti Laptop GPU (0x00002420)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_3090_TI_0X00002203:
		return "NVIDIA GeForce RTX 3090 Ti (0x00002203)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_4060_LAPTOP_GPU_0X000028A0:
		return "NVIDIA GeForce RTX 4060 Laptop GPU (0x000028A0)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_4060_LAPTOP_GPU_0X000028E0:
		return "NVIDIA GeForce RTX 4060 Laptop GPU (0x000028E0)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_4060_TI_0X00002803:
		return "NVIDIA GeForce RTX 4060 Ti (0x00002803)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_4070_SUPER_0X00002783:
		return "NVIDIA GeForce RTX 4070 SUPER (0x00002783)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_4070_TI_0X00002782:
		return "NVIDIA GeForce RTX 4070 Ti (0x00002782)"
	case CHIPSET_NVIDIA_GEFORCE_RTX_4080_SUPER_0X00002702:
		return "NVIDIA GeForce RTX 4080 SUPER (0x00002702)"
	default:
		return ""
	}
}

func platformToRendererType(platform string) RendererType {
	switch strings.ToLower(platform) {
	case "linux":
		return PLATFORM_LINUX
	case "macos":
		return PLATFORM_MACOS
	case "windows":
		return PLATFORM_WINDOWS
	default:
		return PLATFORM_LINUX
	}
}

func versionToRendererType(platform, version string) RendererType {
	switch strings.ToLower(platform) {
	case "linux":
		return linuxVersionToRendererType(version)
	case "macos":
		return macOSVersionToRendererType(version)
	case "windows":
		return windowsVersionToRendererType(version)
	default:
		return END_LINUX_PLATFORM_VERSION - 1
	}
}

func linuxVersionToRendererType(version string) RendererType {
	switch version {
	case "5.18.11":
		return LINUX_PLATFORM_VERSION_5_18_11
	case "5.19.15":
		return LINUX_PLATFORM_VERSION_5_19_15
	case "6.7.11":
		return LINUX_PLATFORM_VERSION_6_7_11
	case "6.8.12":
		return LINUX_PLATFORM_VERSION_6_8_12
	case "6.9.10":
		return LINUX_PLATFORM_VERSION_6_9_10
	case "6.10.11":
		return LINUX_PLATFORM_VERSION_6_10_11
	default:
		return END_LINUX_PLATFORM_VERSION - 1
	}
}

func macOSVersionToRendererType(version string) RendererType {
	switch version {
	case "13.6.6":
		return MACOS_PLATFORM_VERSION_13_6_6
	case "13.7":
		return MACOS_PLATFORM_VERSION_13_7
	case "14.4.1":
		return MACOS_PLATFORM_VERSION_14_4_1
	case "14.6.1":
		return MACOS_PLATFORM_VERSION_14_6_1
	case "14.7":
		return MACOS_PLATFORM_VERSION_14_7
	case "15.0":
		return MACOS_PLATFORM_VERSION_15_0
	default:
		return END_MACOS_PLATFORM_VERSION - 1
	}
}

func windowsVersionToRendererType(version string) RendererType {
	switch version {
	case "10.0.0":
		return WINDOWS_PLATFORM_VERSION_10_0_0
	case "14.0.0":
		return WINDOWS_PLATFORM_VERSION_14_0_0
	default:
		return END_WINDOWS_PLATFORM_VERSION - 1
	}
}

type Renderer struct {
	Possibilities []RendererType
	rand          *rand.Rand
}

func NewRenderer(seed int64) *Renderer {
	possibilities := make([]RendererType, 0, EndSuffix)
	for i := RendererType(0); i < EndSuffix; i++ {
		possibilities = append(possibilities, RendererType(i))
	}

	return &Renderer{
		Possibilities: possibilities,
		rand:          rand.New(rand.NewSource(seed)),
	}
}

type WebGLRenderer struct {
	Platform string
	Version  string
	Renderer string
	tokens   []*Renderer
}

func NewWebGLRenderer(platform, version string, seed int64) *WebGLRenderer {
	tokens := make([]*Renderer, 5) // Platform, Version, Vendor, Series, Suffix
	for i := range tokens {
		tokens[i] = NewRenderer(seed)
	}

	wr := &WebGLRenderer{
		Platform: platform,
		Version:  version,
		tokens:   tokens,
	}

	wr.tokens[0].Possibilities = []RendererType{platformToRendererType(wr.Platform)}
	wr.tokens[1].Possibilities = []RendererType{versionToRendererType(wr.Platform, wr.Version)}
	wr.tokens[2].Possibilities = []RendererType{GraphicsLayerANGLE}
	wr.generate()
	wr.buildRenderer()

	return wr
}

func (wr *WebGLRenderer) generate() {
	for i := 0; i < len(wr.tokens); i++ {
		tt := wr.tokens[i].Collapse()
		if tt == 0 {
			break
		}

		if i+1 < len(wr.tokens) {
			wr.tokens[i+1].Observe(wr.tokens[i], wr.tokens[i-1])
		}
	}
}

func (r *Renderer) Collapse() RendererType {
	if len(r.Possibilities) == 0 {
		return 0
	}
	r.Possibilities = []RendererType{
		r.Possibilities[r.rand.Intn(len(r.Possibilities))],
	}
	return r.Possibilities[0]
}

func (r *Renderer) Observe(collapsed, prev *Renderer) {
	reduced := []RendererType{}
	for _, currentType := range r.Possibilities {
		r.rand.Shuffle(len(prev.Possibilities), func(i, j int) {
			prev.Possibilities[i], prev.Possibilities[j] = prev.Possibilities[j], prev.Possibilities[i]
		})
		for _, prevType := range prev.Possibilities {
			if isCompatible(collapsed.Possibilities[0], prevType, currentType) {
				reduced = append(reduced, currentType)
				break
			}
		}
	}
	r.Possibilities = reduced
}

func isCompatible(collapsed, prev, current RendererType) bool {
	isVendor := func(token RendererType) bool {
		return In(token, StartGraphicsProvider, EndGraphicsProvider)
	}

	isGPUSeries := func(token RendererType) bool {
		return In(token, StartNVIDIASeries, EndNVIDIASeries) ||
			In(token, StartAMDSeries, EndAMDSeries) ||
			In(token, StartIntelSeries, EndIntelSeries) ||
			In(token, StartAppleSeries, EndAppleSeries)
	}

	isSuffix := func(token RendererType) bool {
		return In(token, StartSuffix, EndSuffix)
	}

	// First generated token (third overall) must be a vendor
	if isVendor(prev) {
		return isGPUSeries(current)
	}

	// Second generated token (fourth overall) must be a GPU series compatible with the vendor
	if isGPUSeries(prev) {
		switch collapsed {
		case VendorNVIDIA:
			return In(current, StartNVIDIASeries, EndNVIDIASeries)
		case VendorAMD:
			return In(current, StartAMDSeries, EndAMDSeries)
		case VendorIntel:
			return In(current, StartIntelSeries, EndIntelSeries)
		case VendorApple:
			return In(current, StartAppleSeries, EndAppleSeries)
		}
		return false
	}

	// Third generated token (fifth overall) must be a suffix
	return isSuffix(current)
}

func (wr *WebGLRenderer) buildRenderer() {
	var parts []string
	for i := 2; i < len(wr.tokens); i++ {
		if len(wr.tokens[i].Possibilities) > 0 {
			part := wr.tokens[i].Possibilities[0].String()
			if part != "" {
				parts = append(parts, part)
			}
		}
	}

	wr.Renderer = strings.Join(parts, " ")
}

func In(token, start, end RendererType) bool {
	return token > start && token < end
}

func filterTokens(tokens []RendererType, start, end RendererType) []RendererType {
	filtered := make([]RendererType, 0, len(tokens))
	for _, token := range tokens {
		if In(token, start, end) {
			filtered = append(filtered, token)
		}
	}
	return filtered
}
